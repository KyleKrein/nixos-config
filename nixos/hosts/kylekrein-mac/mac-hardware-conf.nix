# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "usb_storage" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "tmpfs";
    fsType = "tmpfs";
    options = [ "defaults" "size=8G" "mode=755" ];
  };
  fileSystems."/persist" =
    { device = "/dev/disk/by-label/nixos";
      fsType = "ext4";
      depends = [ "/" ];
      neededForBoot = true;
    };
  fileSystems."/nix" = {
    device = "/persist/nix";
    options = [ "bind" ];
    depends = [ "/persist" ];
  };
  fileSystems."/tmp" = {
    device = "/persist/tmp";
    options = [ "bind" ];
    depends = [ "/persist" ];
  };
  fileSystems."/boot" =
    { device = "/dev/disk/by-label/EFI\\x20-\\x20NIXOS";
      fsType = "vfat";
      #options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ 
    {
      device = "/persist/swapfile";
      size = 16*1024;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
